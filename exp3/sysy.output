Nonterminals useless in grammar

    UnaryOp


Terminals unused in grammar

    DO
    QUESTION
    COLON
    NOT
    TILDE
    LEX_ERR
    PLUS
    UADD
    UMINUS


Rules useless in grammar

  107 UnaryOp: ADD
  108        | MINUS
  109        | NOT


Grammar

    0 $accept: CompUnits $end

    1 CompUnits: CompUnit

    2 CompUnit: CompUnit Decl
    3         | CompUnit FuncDef
    4         | Decl
    5         | FuncDef

    6 FuncDef: BType ID LP RP Block
    7        | BType ID LP FuncFParams RP Block
    8        | FuncType ID LP RP Block
    9        | FuncType ID LP FuncFParams RP Block

   10 FuncType: VOID

   11 FuncFParams: FuncfFParam
   12            | FuncFParams COMMA FuncfFParam

   13 FuncfFParam: BType ID
   14            | BType ID LB RB

   15 BlockMul: %empty
   16         | BlockMul BlockItem

   17 Block: LC BlockMul RC

   18 BlockItem: Decl
   19          | Stmt

   20 Decl: ConstDecl
   21     | VarDecl

   22 ConstDeclMul: ConstDef
   23             | ConstDeclMul COMMA ConstDef

   24 ConstDecl: CONST BType ConstDeclMul SEMICOLON

   25 BType: INT
   26      | FLOAT

   27 ConstDef: ID ASSIGN ConstInitVal

   28 ConstInitValMul: ConstInitVal
   29                | ConstInitValMul COMMA ConstInitVal

   30 ConstInitVal: ConstExp
   31             | LC RC
   32             | LC ConstInitValMul RC

   33 VarDeclMul: VarDef
   34           | VarDeclMul COMMA VarDef

   35 VarDecl: BType VarDeclMul SEMICOLON

   36 VarDef: ID
   37       | ID ASSIGN InitVal
   38       | ID LB INT_LIT RB LB INT_LIT RB

   39 InitValMul: InitVal
   40           | InitValMul COMMA InitVal

   41 InitVal: Exp
   42        | LC RC
   43        | LC InitValMul RC

   44 Stmt: LVal ASSIGN Exp SEMICOLON
   45     | SEMICOLON
   46     | Exp SEMICOLON
   47     | Block
   48     | IF LP Cond RP Stmt
   49     | IF LP Cond RP Stmt ELSE Stmt
   50     | WHILE LP Cond RP Stmt
   51     | BREAK SEMICOLON
   52     | CONTINUE SEMICOLON
   53     | RETURN Exp SEMICOLON
   54     | RETURN SEMICOLON
   55     | FOR LP ForDec RP Block

   56 ForDec: ForExp1 ForExp2 SEMICOLON ForExp3
   57       | ForExp1 SEMICOLON ForExp3
   58       | ForExp1 ForExp2 SEMICOLON
   59       | ForExp1 SEMICOLON
   60       | SEMICOLON ForExp2 SEMICOLON ForExp3
   61       | SEMICOLON ForExp2 SEMICOLON
   62       | SEMICOLON SEMICOLON ForExp3
   63       | SEMICOLON SEMICOLON

   64 ForExp1: VarDecl
   65        | VarDef SEMICOLON

   66 ForExp2: Cond

   67 ForExp3: Exp COMMA ForExp3
   68        | Exp

   69 Exp: AddExp

   70 Cond: LOrExp

   71 LVal: ID
   72     | ID LB INT_LIT RB LB ID RB
   73     | ID LB INT_LIT RB

   74 PrimaryExp: LP Exp RP
   75           | LVal
   76           | Number

   77 Number: INT_LIT
   78       | FLOAT_LIT

   79 UnaryExp: PrimaryExp
   80         | ID LP RP
   81         | ID LP FuncRParams RP
   82         | UnaryExp AutoOp

   83 AutoOp: AUTOADD
   84       | AUTOMINUS

   85 FuncRParams: Exp
   86            | FuncRParams COMMA Exp

   87 MulExp: UnaryExp
   88       | MulExp MUL UnaryExp
   89       | MulExp DIV UnaryExp
   90       | MulExp MOD UnaryExp

   91 AddExp: MulExp
   92       | AddExp ADD MulExp
   93       | AddExp MINUS MulExp

   94 RelExp: AddExp
   95       | RelExp LT AddExp
   96       | RelExp GT AddExp
   97       | RelExp LE AddExp
   98       | RelExp GE AddExp

   99 EqExp: RelExp
  100      | EqExp EQ RelExp
  101      | EqExp NE RelExp

  102 LAndExp: EqExp
  103        | LAndExp AND EqExp

  104 LOrExp: LAndExp
  105       | LOrExp OR LAndExp

  106 ConstExp: AddExp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <type_id> (258) 25
    FLOAT <type_id> (259) 26
    VOID (260) 10
    CONST (261) 24
    RETURN (262) 53 54
    IF (263) 48 49
    ELSE (264) 49
    FOR (265) 55
    WHILE (266) 50
    DO (267)
    BREAK (268) 51
    CONTINUE (269) 52
    LP (270) 6 7 8 9 48 49 50 55 74 80 81
    RP (271) 6 7 8 9 48 49 50 55 74 80 81
    LB (272) 14 38 72 73
    RB (273) 14 38 72 73
    LC (274) 17 31 32 42 43
    RC (275) 17 31 32 42 43
    COMMA (276) 12 23 29 34 40 67 86
    SEMICOLON (277) 24 35 44 45 46 51 52 53 54 56 57 58 59 60 61 62 63 65
    QUESTION (278)
    COLON (279)
    MINUS (280) 93
    NOT (281)
    TILDE (282)
    ASSIGN (283) 27 37 44
    ADD (284) 92
    MUL (285) 88
    DIV (286) 89
    MOD (287) 90
    AND (288) 103
    OR (289) 105
    ID <type_id> (290) 6 7 8 9 13 14 27 36 37 38 71 72 73 80 81
    EQ <type_id> (291) 100
    NE <type_id> (292) 101
    LT <type_id> (293) 95
    LE <type_id> (294) 97
    GT <type_id> (295) 96
    GE <type_id> (296) 98
    INT_LIT <type_int> (297) 38 72 73 77
    FLOAT_LIT <type_float> (298) 78
    LEX_ERR (299)
    PLUS (300)
    AUTOADD (301) 83
    AUTOMINUS (302) 84
    UADD (303)
    UMINUS (304)
    LOWER_THEN_ELSE (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    CompUnits <ptr> (52)
        on left: 1
        on right: 0
    CompUnit <ptr> (53)
        on left: 2 3 4 5
        on right: 1 2 3
    FuncDef <ptr> (54)
        on left: 6 7 8 9
        on right: 3 5
    FuncType <ptr> (55)
        on left: 10
        on right: 8 9
    FuncFParams <ptr> (56)
        on left: 11 12
        on right: 7 9 12
    FuncfFParam <ptr> (57)
        on left: 13 14
        on right: 11 12
    BlockMul <ptr> (58)
        on left: 15 16
        on right: 16 17
    Block <ptr> (59)
        on left: 17
        on right: 6 7 8 9 47 55
    BlockItem <ptr> (60)
        on left: 18 19
        on right: 16
    Decl <ptr> (61)
        on left: 20 21
        on right: 2 4 18
    ConstDeclMul <ptr> (62)
        on left: 22 23
        on right: 23 24
    ConstDecl <ptr> (63)
        on left: 24
        on right: 20
    BType <ptr> (64)
        on left: 25 26
        on right: 6 7 13 14 24 35
    ConstDef <ptr> (65)
        on left: 27
        on right: 22 23
    ConstInitValMul <ptr> (66)
        on left: 28 29
        on right: 29 32
    ConstInitVal <ptr> (67)
        on left: 30 31 32
        on right: 27 28 29
    VarDeclMul <ptr> (68)
        on left: 33 34
        on right: 34 35
    VarDecl <ptr> (69)
        on left: 35
        on right: 21 64
    VarDef <ptr> (70)
        on left: 36 37 38
        on right: 33 34 65
    InitValMul <ptr> (71)
        on left: 39 40
        on right: 40 43
    InitVal <ptr> (72)
        on left: 41 42 43
        on right: 37 39 40
    Stmt <ptr> (73)
        on left: 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 19 48 49 50
    ForDec <ptr> (74)
        on left: 56 57 58 59 60 61 62 63
        on right: 55
    ForExp1 <ptr> (75)
        on left: 64 65
        on right: 56 57 58 59
    ForExp2 <ptr> (76)
        on left: 66
        on right: 56 58 60 61
    ForExp3 <ptr> (77)
        on left: 67 68
        on right: 56 57 60 62 67
    Exp <ptr> (78)
        on left: 69
        on right: 41 44 46 53 67 68 74 85 86
    Cond <ptr> (79)
        on left: 70
        on right: 48 49 50 66
    LVal <ptr> (80)
        on left: 71 72 73
        on right: 44 75
    PrimaryExp <ptr> (81)
        on left: 74 75 76
        on right: 79
    Number <ptr> (82)
        on left: 77 78
        on right: 76
    UnaryExp <ptr> (83)
        on left: 79 80 81 82
        on right: 82 87 88 89 90
    AutoOp <ptr> (84)
        on left: 83 84
        on right: 82
    FuncRParams <ptr> (85)
        on left: 85 86
        on right: 81 86
    MulExp <ptr> (86)
        on left: 87 88 89 90
        on right: 88 89 90 91 92 93
    AddExp <ptr> (87)
        on left: 91 92 93
        on right: 69 92 93 94 95 96 97 98 106
    RelExp <ptr> (88)
        on left: 94 95 96 97 98
        on right: 95 96 97 98 99 100 101
    EqExp <ptr> (89)
        on left: 99 100 101
        on right: 100 101 102 103
    LAndExp <ptr> (90)
        on left: 102 103
        on right: 103 104 105
    LOrExp <ptr> (91)
        on left: 104 105
        on right: 70 105
    ConstExp <ptr> (92)
        on left: 106
        on right: 30


State 0

    0 $accept: . CompUnits $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3
    CONST  shift, and go to state 4

    CompUnits  go to state 5
    CompUnit   go to state 6
    FuncDef    go to state 7
    FuncType   go to state 8
    Decl       go to state 9
    ConstDecl  go to state 10
    BType      go to state 11
    VarDecl    go to state 12


State 1

   25 BType: INT .

    $default  reduce using rule 25 (BType)


State 2

   26 BType: FLOAT .

    $default  reduce using rule 26 (BType)


State 3

   10 FuncType: VOID .

    $default  reduce using rule 10 (FuncType)


State 4

   24 ConstDecl: CONST . BType ConstDeclMul SEMICOLON

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    BType  go to state 13


State 5

    0 $accept: CompUnits . $end

    $end  shift, and go to state 14


State 6

    1 CompUnits: CompUnit .
    2 CompUnit: CompUnit . Decl
    3         | CompUnit . FuncDef

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3
    CONST  shift, and go to state 4

    $default  reduce using rule 1 (CompUnits)

    FuncDef    go to state 15
    FuncType   go to state 8
    Decl       go to state 16
    ConstDecl  go to state 10
    BType      go to state 11
    VarDecl    go to state 12


State 7

    5 CompUnit: FuncDef .

    $default  reduce using rule 5 (CompUnit)


State 8

    8 FuncDef: FuncType . ID LP RP Block
    9        | FuncType . ID LP FuncFParams RP Block

    ID  shift, and go to state 17


State 9

    4 CompUnit: Decl .

    $default  reduce using rule 4 (CompUnit)


State 10

   20 Decl: ConstDecl .

    $default  reduce using rule 20 (Decl)


State 11

    6 FuncDef: BType . ID LP RP Block
    7        | BType . ID LP FuncFParams RP Block
   35 VarDecl: BType . VarDeclMul SEMICOLON

    ID  shift, and go to state 18

    VarDeclMul  go to state 19
    VarDef      go to state 20


State 12

   21 Decl: VarDecl .

    $default  reduce using rule 21 (Decl)


State 13

   24 ConstDecl: CONST BType . ConstDeclMul SEMICOLON

    ID  shift, and go to state 21

    ConstDeclMul  go to state 22
    ConstDef      go to state 23


State 14

    0 $accept: CompUnits $end .

    $default  accept


State 15

    3 CompUnit: CompUnit FuncDef .

    $default  reduce using rule 3 (CompUnit)


State 16

    2 CompUnit: CompUnit Decl .

    $default  reduce using rule 2 (CompUnit)


State 17

    8 FuncDef: FuncType ID . LP RP Block
    9        | FuncType ID . LP FuncFParams RP Block

    LP  shift, and go to state 24


State 18

    6 FuncDef: BType ID . LP RP Block
    7        | BType ID . LP FuncFParams RP Block
   36 VarDef: ID .
   37       | ID . ASSIGN InitVal
   38       | ID . LB INT_LIT RB LB INT_LIT RB

    LP      shift, and go to state 25
    LB      shift, and go to state 26
    ASSIGN  shift, and go to state 27

    $default  reduce using rule 36 (VarDef)


State 19

   34 VarDeclMul: VarDeclMul . COMMA VarDef
   35 VarDecl: BType VarDeclMul . SEMICOLON

    COMMA      shift, and go to state 28
    SEMICOLON  shift, and go to state 29


State 20

   33 VarDeclMul: VarDef .

    $default  reduce using rule 33 (VarDeclMul)


State 21

   27 ConstDef: ID . ASSIGN ConstInitVal

    ASSIGN  shift, and go to state 30


State 22

   23 ConstDeclMul: ConstDeclMul . COMMA ConstDef
   24 ConstDecl: CONST BType ConstDeclMul . SEMICOLON

    COMMA      shift, and go to state 31
    SEMICOLON  shift, and go to state 32


State 23

   22 ConstDeclMul: ConstDef .

    $default  reduce using rule 22 (ConstDeclMul)


State 24

    8 FuncDef: FuncType ID LP . RP Block
    9        | FuncType ID LP . FuncFParams RP Block

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    RP     shift, and go to state 33

    FuncFParams  go to state 34
    FuncfFParam  go to state 35
    BType        go to state 36


State 25

    6 FuncDef: BType ID LP . RP Block
    7        | BType ID LP . FuncFParams RP Block

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    RP     shift, and go to state 37

    FuncFParams  go to state 38
    FuncfFParam  go to state 35
    BType        go to state 36


State 26

   38 VarDef: ID LB . INT_LIT RB LB INT_LIT RB

    INT_LIT  shift, and go to state 39


State 27

   37 VarDef: ID ASSIGN . InitVal

    LP         shift, and go to state 40
    LC         shift, and go to state 41
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    InitVal     go to state 45
    Exp         go to state 46
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 28

   34 VarDeclMul: VarDeclMul COMMA . VarDef

    ID  shift, and go to state 53

    VarDef  go to state 54


State 29

   35 VarDecl: BType VarDeclMul SEMICOLON .

    $default  reduce using rule 35 (VarDecl)


State 30

   27 ConstDef: ID ASSIGN . ConstInitVal

    LP         shift, and go to state 40
    LC         shift, and go to state 55
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    ConstInitVal  go to state 56
    LVal          go to state 47
    PrimaryExp    go to state 48
    Number        go to state 49
    UnaryExp      go to state 50
    MulExp        go to state 51
    AddExp        go to state 57
    ConstExp      go to state 58


State 31

   23 ConstDeclMul: ConstDeclMul COMMA . ConstDef

    ID  shift, and go to state 21

    ConstDef  go to state 59


State 32

   24 ConstDecl: CONST BType ConstDeclMul SEMICOLON .

    $default  reduce using rule 24 (ConstDecl)


State 33

    8 FuncDef: FuncType ID LP RP . Block

    LC  shift, and go to state 60

    Block  go to state 61


State 34

    9 FuncDef: FuncType ID LP FuncFParams . RP Block
   12 FuncFParams: FuncFParams . COMMA FuncfFParam

    RP     shift, and go to state 62
    COMMA  shift, and go to state 63


State 35

   11 FuncFParams: FuncfFParam .

    $default  reduce using rule 11 (FuncFParams)


State 36

   13 FuncfFParam: BType . ID
   14            | BType . ID LB RB

    ID  shift, and go to state 64


State 37

    6 FuncDef: BType ID LP RP . Block

    LC  shift, and go to state 60

    Block  go to state 65


State 38

    7 FuncDef: BType ID LP FuncFParams . RP Block
   12 FuncFParams: FuncFParams . COMMA FuncfFParam

    RP     shift, and go to state 66
    COMMA  shift, and go to state 63


State 39

   38 VarDef: ID LB INT_LIT . RB LB INT_LIT RB

    RB  shift, and go to state 67


State 40

   74 PrimaryExp: LP . Exp RP

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Exp         go to state 68
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 41

   42 InitVal: LC . RC
   43        | LC . InitValMul RC

    LP         shift, and go to state 40
    LC         shift, and go to state 41
    RC         shift, and go to state 69
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    InitValMul  go to state 70
    InitVal     go to state 71
    Exp         go to state 46
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 42

   71 LVal: ID .
   72     | ID . LB INT_LIT RB LB ID RB
   73     | ID . LB INT_LIT RB
   80 UnaryExp: ID . LP RP
   81         | ID . LP FuncRParams RP

    LP  shift, and go to state 72
    LB  shift, and go to state 73

    $default  reduce using rule 71 (LVal)


State 43

   77 Number: INT_LIT .

    $default  reduce using rule 77 (Number)


State 44

   78 Number: FLOAT_LIT .

    $default  reduce using rule 78 (Number)


State 45

   37 VarDef: ID ASSIGN InitVal .

    $default  reduce using rule 37 (VarDef)


State 46

   41 InitVal: Exp .

    $default  reduce using rule 41 (InitVal)


State 47

   75 PrimaryExp: LVal .

    $default  reduce using rule 75 (PrimaryExp)


State 48

   79 UnaryExp: PrimaryExp .

    $default  reduce using rule 79 (UnaryExp)


State 49

   76 PrimaryExp: Number .

    $default  reduce using rule 76 (PrimaryExp)


State 50

   82 UnaryExp: UnaryExp . AutoOp
   87 MulExp: UnaryExp .

    AUTOADD    shift, and go to state 74
    AUTOMINUS  shift, and go to state 75

    $default  reduce using rule 87 (MulExp)

    AutoOp  go to state 76


State 51

   88 MulExp: MulExp . MUL UnaryExp
   89       | MulExp . DIV UnaryExp
   90       | MulExp . MOD UnaryExp
   91 AddExp: MulExp .

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 91 (AddExp)


State 52

   69 Exp: AddExp .
   92 AddExp: AddExp . ADD MulExp
   93       | AddExp . MINUS MulExp

    MINUS  shift, and go to state 80
    ADD    shift, and go to state 81

    $default  reduce using rule 69 (Exp)


State 53

   36 VarDef: ID .
   37       | ID . ASSIGN InitVal
   38       | ID . LB INT_LIT RB LB INT_LIT RB

    LB      shift, and go to state 26
    ASSIGN  shift, and go to state 27

    $default  reduce using rule 36 (VarDef)


State 54

   34 VarDeclMul: VarDeclMul COMMA VarDef .

    $default  reduce using rule 34 (VarDeclMul)


State 55

   31 ConstInitVal: LC . RC
   32             | LC . ConstInitValMul RC

    LP         shift, and go to state 40
    LC         shift, and go to state 55
    RC         shift, and go to state 82
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    ConstInitValMul  go to state 83
    ConstInitVal     go to state 84
    LVal             go to state 47
    PrimaryExp       go to state 48
    Number           go to state 49
    UnaryExp         go to state 50
    MulExp           go to state 51
    AddExp           go to state 57
    ConstExp         go to state 58


State 56

   27 ConstDef: ID ASSIGN ConstInitVal .

    $default  reduce using rule 27 (ConstDef)


State 57

   92 AddExp: AddExp . ADD MulExp
   93       | AddExp . MINUS MulExp
  106 ConstExp: AddExp .

    MINUS  shift, and go to state 80
    ADD    shift, and go to state 81

    $default  reduce using rule 106 (ConstExp)


State 58

   30 ConstInitVal: ConstExp .

    $default  reduce using rule 30 (ConstInitVal)


State 59

   23 ConstDeclMul: ConstDeclMul COMMA ConstDef .

    $default  reduce using rule 23 (ConstDeclMul)


State 60

   17 Block: LC . BlockMul RC

    $default  reduce using rule 15 (BlockMul)

    BlockMul  go to state 85


State 61

    8 FuncDef: FuncType ID LP RP Block .

    $default  reduce using rule 8 (FuncDef)


State 62

    9 FuncDef: FuncType ID LP FuncFParams RP . Block

    LC  shift, and go to state 60

    Block  go to state 86


State 63

   12 FuncFParams: FuncFParams COMMA . FuncfFParam

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    FuncfFParam  go to state 87
    BType        go to state 36


State 64

   13 FuncfFParam: BType ID .
   14            | BType ID . LB RB

    LB  shift, and go to state 88

    $default  reduce using rule 13 (FuncfFParam)


State 65

    6 FuncDef: BType ID LP RP Block .

    $default  reduce using rule 6 (FuncDef)


State 66

    7 FuncDef: BType ID LP FuncFParams RP . Block

    LC  shift, and go to state 60

    Block  go to state 89


State 67

   38 VarDef: ID LB INT_LIT RB . LB INT_LIT RB

    LB  shift, and go to state 90


State 68

   74 PrimaryExp: LP Exp . RP

    RP  shift, and go to state 91


State 69

   42 InitVal: LC RC .

    $default  reduce using rule 42 (InitVal)


State 70

   40 InitValMul: InitValMul . COMMA InitVal
   43 InitVal: LC InitValMul . RC

    RC     shift, and go to state 92
    COMMA  shift, and go to state 93


State 71

   39 InitValMul: InitVal .

    $default  reduce using rule 39 (InitValMul)


State 72

   80 UnaryExp: ID LP . RP
   81         | ID LP . FuncRParams RP

    LP         shift, and go to state 40
    RP         shift, and go to state 94
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Exp          go to state 95
    LVal         go to state 47
    PrimaryExp   go to state 48
    Number       go to state 49
    UnaryExp     go to state 50
    FuncRParams  go to state 96
    MulExp       go to state 51
    AddExp       go to state 52


State 73

   72 LVal: ID LB . INT_LIT RB LB ID RB
   73     | ID LB . INT_LIT RB

    INT_LIT  shift, and go to state 97


State 74

   83 AutoOp: AUTOADD .

    $default  reduce using rule 83 (AutoOp)


State 75

   84 AutoOp: AUTOMINUS .

    $default  reduce using rule 84 (AutoOp)


State 76

   82 UnaryExp: UnaryExp AutoOp .

    $default  reduce using rule 82 (UnaryExp)


State 77

   88 MulExp: MulExp MUL . UnaryExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 98


State 78

   89 MulExp: MulExp DIV . UnaryExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 99


State 79

   90 MulExp: MulExp MOD . UnaryExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 100


State 80

   93 AddExp: AddExp MINUS . MulExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 101


State 81

   92 AddExp: AddExp ADD . MulExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 102


State 82

   31 ConstInitVal: LC RC .

    $default  reduce using rule 31 (ConstInitVal)


State 83

   29 ConstInitValMul: ConstInitValMul . COMMA ConstInitVal
   32 ConstInitVal: LC ConstInitValMul . RC

    RC     shift, and go to state 103
    COMMA  shift, and go to state 104


State 84

   28 ConstInitValMul: ConstInitVal .

    $default  reduce using rule 28 (ConstInitValMul)


State 85

   16 BlockMul: BlockMul . BlockItem
   17 Block: LC BlockMul . RC

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CONST      shift, and go to state 4
    RETURN     shift, and go to state 105
    IF         shift, and go to state 106
    FOR        shift, and go to state 107
    WHILE      shift, and go to state 108
    BREAK      shift, and go to state 109
    CONTINUE   shift, and go to state 110
    LP         shift, and go to state 40
    LC         shift, and go to state 60
    RC         shift, and go to state 111
    SEMICOLON  shift, and go to state 112
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Block       go to state 113
    BlockItem   go to state 114
    Decl        go to state 115
    ConstDecl   go to state 10
    BType       go to state 116
    VarDecl     go to state 12
    Stmt        go to state 117
    Exp         go to state 118
    LVal        go to state 119
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 86

    9 FuncDef: FuncType ID LP FuncFParams RP Block .

    $default  reduce using rule 9 (FuncDef)


State 87

   12 FuncFParams: FuncFParams COMMA FuncfFParam .

    $default  reduce using rule 12 (FuncFParams)


State 88

   14 FuncfFParam: BType ID LB . RB

    RB  shift, and go to state 120


State 89

    7 FuncDef: BType ID LP FuncFParams RP Block .

    $default  reduce using rule 7 (FuncDef)


State 90

   38 VarDef: ID LB INT_LIT RB LB . INT_LIT RB

    INT_LIT  shift, and go to state 121


State 91

   74 PrimaryExp: LP Exp RP .

    $default  reduce using rule 74 (PrimaryExp)


State 92

   43 InitVal: LC InitValMul RC .

    $default  reduce using rule 43 (InitVal)


State 93

   40 InitValMul: InitValMul COMMA . InitVal

    LP         shift, and go to state 40
    LC         shift, and go to state 41
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    InitVal     go to state 122
    Exp         go to state 46
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 94

   80 UnaryExp: ID LP RP .

    $default  reduce using rule 80 (UnaryExp)


State 95

   85 FuncRParams: Exp .

    $default  reduce using rule 85 (FuncRParams)


State 96

   81 UnaryExp: ID LP FuncRParams . RP
   86 FuncRParams: FuncRParams . COMMA Exp

    RP     shift, and go to state 123
    COMMA  shift, and go to state 124


State 97

   72 LVal: ID LB INT_LIT . RB LB ID RB
   73     | ID LB INT_LIT . RB

    RB  shift, and go to state 125


State 98

   82 UnaryExp: UnaryExp . AutoOp
   88 MulExp: MulExp MUL UnaryExp .

    AUTOADD    shift, and go to state 74
    AUTOMINUS  shift, and go to state 75

    $default  reduce using rule 88 (MulExp)

    AutoOp  go to state 76


State 99

   82 UnaryExp: UnaryExp . AutoOp
   89 MulExp: MulExp DIV UnaryExp .

    AUTOADD    shift, and go to state 74
    AUTOMINUS  shift, and go to state 75

    $default  reduce using rule 89 (MulExp)

    AutoOp  go to state 76


State 100

   82 UnaryExp: UnaryExp . AutoOp
   90 MulExp: MulExp MOD UnaryExp .

    AUTOADD    shift, and go to state 74
    AUTOMINUS  shift, and go to state 75

    $default  reduce using rule 90 (MulExp)

    AutoOp  go to state 76


State 101

   88 MulExp: MulExp . MUL UnaryExp
   89       | MulExp . DIV UnaryExp
   90       | MulExp . MOD UnaryExp
   93 AddExp: AddExp MINUS MulExp .

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 93 (AddExp)


State 102

   88 MulExp: MulExp . MUL UnaryExp
   89       | MulExp . DIV UnaryExp
   90       | MulExp . MOD UnaryExp
   92 AddExp: AddExp ADD MulExp .

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 92 (AddExp)


State 103

   32 ConstInitVal: LC ConstInitValMul RC .

    $default  reduce using rule 32 (ConstInitVal)


State 104

   29 ConstInitValMul: ConstInitValMul COMMA . ConstInitVal

    LP         shift, and go to state 40
    LC         shift, and go to state 55
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    ConstInitVal  go to state 126
    LVal          go to state 47
    PrimaryExp    go to state 48
    Number        go to state 49
    UnaryExp      go to state 50
    MulExp        go to state 51
    AddExp        go to state 57
    ConstExp      go to state 58


State 105

   53 Stmt: RETURN . Exp SEMICOLON
   54     | RETURN . SEMICOLON

    LP         shift, and go to state 40
    SEMICOLON  shift, and go to state 127
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Exp         go to state 128
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 106

   48 Stmt: IF . LP Cond RP Stmt
   49     | IF . LP Cond RP Stmt ELSE Stmt

    LP  shift, and go to state 129


State 107

   55 Stmt: FOR . LP ForDec RP Block

    LP  shift, and go to state 130


State 108

   50 Stmt: WHILE . LP Cond RP Stmt

    LP  shift, and go to state 131


State 109

   51 Stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 132


State 110

   52 Stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 133


State 111

   17 Block: LC BlockMul RC .

    $default  reduce using rule 17 (Block)


State 112

   45 Stmt: SEMICOLON .

    $default  reduce using rule 45 (Stmt)


State 113

   47 Stmt: Block .

    $default  reduce using rule 47 (Stmt)


State 114

   16 BlockMul: BlockMul BlockItem .

    $default  reduce using rule 16 (BlockMul)


State 115

   18 BlockItem: Decl .

    $default  reduce using rule 18 (BlockItem)


State 116

   35 VarDecl: BType . VarDeclMul SEMICOLON

    ID  shift, and go to state 53

    VarDeclMul  go to state 19
    VarDef      go to state 20


State 117

   19 BlockItem: Stmt .

    $default  reduce using rule 19 (BlockItem)


State 118

   46 Stmt: Exp . SEMICOLON

    SEMICOLON  shift, and go to state 134


State 119

   44 Stmt: LVal . ASSIGN Exp SEMICOLON
   75 PrimaryExp: LVal .

    ASSIGN  shift, and go to state 135

    $default  reduce using rule 75 (PrimaryExp)


State 120

   14 FuncfFParam: BType ID LB RB .

    $default  reduce using rule 14 (FuncfFParam)


State 121

   38 VarDef: ID LB INT_LIT RB LB INT_LIT . RB

    RB  shift, and go to state 136


State 122

   40 InitValMul: InitValMul COMMA InitVal .

    $default  reduce using rule 40 (InitValMul)


State 123

   81 UnaryExp: ID LP FuncRParams RP .

    $default  reduce using rule 81 (UnaryExp)


State 124

   86 FuncRParams: FuncRParams COMMA . Exp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Exp         go to state 137
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 125

   72 LVal: ID LB INT_LIT RB . LB ID RB
   73     | ID LB INT_LIT RB .

    LB  shift, and go to state 138

    $default  reduce using rule 73 (LVal)


State 126

   29 ConstInitValMul: ConstInitValMul COMMA ConstInitVal .

    $default  reduce using rule 29 (ConstInitValMul)


State 127

   54 Stmt: RETURN SEMICOLON .

    $default  reduce using rule 54 (Stmt)


State 128

   53 Stmt: RETURN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 129

   48 Stmt: IF LP . Cond RP Stmt
   49     | IF LP . Cond RP Stmt ELSE Stmt

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Cond        go to state 140
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 141
    RelExp      go to state 142
    EqExp       go to state 143
    LAndExp     go to state 144
    LOrExp      go to state 145


State 130

   55 Stmt: FOR LP . ForDec RP Block

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    SEMICOLON  shift, and go to state 146
    ID         shift, and go to state 53

    BType    go to state 116
    VarDecl  go to state 147
    VarDef   go to state 148
    ForDec   go to state 149
    ForExp1  go to state 150


State 131

   50 Stmt: WHILE LP . Cond RP Stmt

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Cond        go to state 151
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 141
    RelExp      go to state 142
    EqExp       go to state 143
    LAndExp     go to state 144
    LOrExp      go to state 145


State 132

   51 Stmt: BREAK SEMICOLON .

    $default  reduce using rule 51 (Stmt)


State 133

   52 Stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 52 (Stmt)


State 134

   46 Stmt: Exp SEMICOLON .

    $default  reduce using rule 46 (Stmt)


State 135

   44 Stmt: LVal ASSIGN . Exp SEMICOLON

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Exp         go to state 152
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 136

   38 VarDef: ID LB INT_LIT RB LB INT_LIT RB .

    $default  reduce using rule 38 (VarDef)


State 137

   86 FuncRParams: FuncRParams COMMA Exp .

    $default  reduce using rule 86 (FuncRParams)


State 138

   72 LVal: ID LB INT_LIT RB LB . ID RB

    ID  shift, and go to state 153


State 139

   53 Stmt: RETURN Exp SEMICOLON .

    $default  reduce using rule 53 (Stmt)


State 140

   48 Stmt: IF LP Cond . RP Stmt
   49     | IF LP Cond . RP Stmt ELSE Stmt

    RP  shift, and go to state 154


State 141

   92 AddExp: AddExp . ADD MulExp
   93       | AddExp . MINUS MulExp
   94 RelExp: AddExp .

    MINUS  shift, and go to state 80
    ADD    shift, and go to state 81

    $default  reduce using rule 94 (RelExp)


State 142

   95 RelExp: RelExp . LT AddExp
   96       | RelExp . GT AddExp
   97       | RelExp . LE AddExp
   98       | RelExp . GE AddExp
   99 EqExp: RelExp .

    LT  shift, and go to state 155
    LE  shift, and go to state 156
    GT  shift, and go to state 157
    GE  shift, and go to state 158

    $default  reduce using rule 99 (EqExp)


State 143

  100 EqExp: EqExp . EQ RelExp
  101      | EqExp . NE RelExp
  102 LAndExp: EqExp .

    EQ  shift, and go to state 159
    NE  shift, and go to state 160

    $default  reduce using rule 102 (LAndExp)


State 144

  103 LAndExp: LAndExp . AND EqExp
  104 LOrExp: LAndExp .

    AND  shift, and go to state 161

    $default  reduce using rule 104 (LOrExp)


State 145

   70 Cond: LOrExp .
  105 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 162

    $default  reduce using rule 70 (Cond)


State 146

   60 ForDec: SEMICOLON . ForExp2 SEMICOLON ForExp3
   61       | SEMICOLON . ForExp2 SEMICOLON
   62       | SEMICOLON . SEMICOLON ForExp3
   63       | SEMICOLON . SEMICOLON

    LP         shift, and go to state 40
    SEMICOLON  shift, and go to state 163
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    ForExp2     go to state 164
    Cond        go to state 165
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 141
    RelExp      go to state 142
    EqExp       go to state 143
    LAndExp     go to state 144
    LOrExp      go to state 145


State 147

   64 ForExp1: VarDecl .

    $default  reduce using rule 64 (ForExp1)


State 148

   65 ForExp1: VarDef . SEMICOLON

    SEMICOLON  shift, and go to state 166


State 149

   55 Stmt: FOR LP ForDec . RP Block

    RP  shift, and go to state 167


State 150

   56 ForDec: ForExp1 . ForExp2 SEMICOLON ForExp3
   57       | ForExp1 . SEMICOLON ForExp3
   58       | ForExp1 . ForExp2 SEMICOLON
   59       | ForExp1 . SEMICOLON

    LP         shift, and go to state 40
    SEMICOLON  shift, and go to state 168
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    ForExp2     go to state 169
    Cond        go to state 165
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 141
    RelExp      go to state 142
    EqExp       go to state 143
    LAndExp     go to state 144
    LOrExp      go to state 145


State 151

   50 Stmt: WHILE LP Cond . RP Stmt

    RP  shift, and go to state 170


State 152

   44 Stmt: LVal ASSIGN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 171


State 153

   72 LVal: ID LB INT_LIT RB LB ID . RB

    RB  shift, and go to state 172


State 154

   48 Stmt: IF LP Cond RP . Stmt
   49     | IF LP Cond RP . Stmt ELSE Stmt

    RETURN     shift, and go to state 105
    IF         shift, and go to state 106
    FOR        shift, and go to state 107
    WHILE      shift, and go to state 108
    BREAK      shift, and go to state 109
    CONTINUE   shift, and go to state 110
    LP         shift, and go to state 40
    LC         shift, and go to state 60
    SEMICOLON  shift, and go to state 112
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Block       go to state 113
    Stmt        go to state 173
    Exp         go to state 118
    LVal        go to state 119
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 155

   95 RelExp: RelExp LT . AddExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 174


State 156

   97 RelExp: RelExp LE . AddExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 175


State 157

   96 RelExp: RelExp GT . AddExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 176


State 158

   98 RelExp: RelExp GE . AddExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 177


State 159

  100 EqExp: EqExp EQ . RelExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 141
    RelExp      go to state 178


State 160

  101 EqExp: EqExp NE . RelExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 141
    RelExp      go to state 179


State 161

  103 LAndExp: LAndExp AND . EqExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 141
    RelExp      go to state 142
    EqExp       go to state 180


State 162

  105 LOrExp: LOrExp OR . LAndExp

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 141
    RelExp      go to state 142
    EqExp       go to state 143
    LAndExp     go to state 181


State 163

   62 ForDec: SEMICOLON SEMICOLON . ForExp3
   63       | SEMICOLON SEMICOLON .

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    $default  reduce using rule 63 (ForDec)

    ForExp3     go to state 182
    Exp         go to state 183
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 164

   60 ForDec: SEMICOLON ForExp2 . SEMICOLON ForExp3
   61       | SEMICOLON ForExp2 . SEMICOLON

    SEMICOLON  shift, and go to state 184


State 165

   66 ForExp2: Cond .

    $default  reduce using rule 66 (ForExp2)


State 166

   65 ForExp1: VarDef SEMICOLON .

    $default  reduce using rule 65 (ForExp1)


State 167

   55 Stmt: FOR LP ForDec RP . Block

    LC  shift, and go to state 60

    Block  go to state 185


State 168

   57 ForDec: ForExp1 SEMICOLON . ForExp3
   59       | ForExp1 SEMICOLON .

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    $default  reduce using rule 59 (ForDec)

    ForExp3     go to state 186
    Exp         go to state 183
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 169

   56 ForDec: ForExp1 ForExp2 . SEMICOLON ForExp3
   58       | ForExp1 ForExp2 . SEMICOLON

    SEMICOLON  shift, and go to state 187


State 170

   50 Stmt: WHILE LP Cond RP . Stmt

    RETURN     shift, and go to state 105
    IF         shift, and go to state 106
    FOR        shift, and go to state 107
    WHILE      shift, and go to state 108
    BREAK      shift, and go to state 109
    CONTINUE   shift, and go to state 110
    LP         shift, and go to state 40
    LC         shift, and go to state 60
    SEMICOLON  shift, and go to state 112
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Block       go to state 113
    Stmt        go to state 188
    Exp         go to state 118
    LVal        go to state 119
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 171

   44 Stmt: LVal ASSIGN Exp SEMICOLON .

    $default  reduce using rule 44 (Stmt)


State 172

   72 LVal: ID LB INT_LIT RB LB ID RB .

    $default  reduce using rule 72 (LVal)


State 173

   48 Stmt: IF LP Cond RP Stmt .
   49     | IF LP Cond RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 189

    $default  reduce using rule 48 (Stmt)


State 174

   92 AddExp: AddExp . ADD MulExp
   93       | AddExp . MINUS MulExp
   95 RelExp: RelExp LT AddExp .

    MINUS  shift, and go to state 80
    ADD    shift, and go to state 81

    $default  reduce using rule 95 (RelExp)


State 175

   92 AddExp: AddExp . ADD MulExp
   93       | AddExp . MINUS MulExp
   97 RelExp: RelExp LE AddExp .

    MINUS  shift, and go to state 80
    ADD    shift, and go to state 81

    $default  reduce using rule 97 (RelExp)


State 176

   92 AddExp: AddExp . ADD MulExp
   93       | AddExp . MINUS MulExp
   96 RelExp: RelExp GT AddExp .

    MINUS  shift, and go to state 80
    ADD    shift, and go to state 81

    $default  reduce using rule 96 (RelExp)


State 177

   92 AddExp: AddExp . ADD MulExp
   93       | AddExp . MINUS MulExp
   98 RelExp: RelExp GE AddExp .

    MINUS  shift, and go to state 80
    ADD    shift, and go to state 81

    $default  reduce using rule 98 (RelExp)


State 178

   95 RelExp: RelExp . LT AddExp
   96       | RelExp . GT AddExp
   97       | RelExp . LE AddExp
   98       | RelExp . GE AddExp
  100 EqExp: EqExp EQ RelExp .

    LT  shift, and go to state 155
    LE  shift, and go to state 156
    GT  shift, and go to state 157
    GE  shift, and go to state 158

    $default  reduce using rule 100 (EqExp)


State 179

   95 RelExp: RelExp . LT AddExp
   96       | RelExp . GT AddExp
   97       | RelExp . LE AddExp
   98       | RelExp . GE AddExp
  101 EqExp: EqExp NE RelExp .

    LT  shift, and go to state 155
    LE  shift, and go to state 156
    GT  shift, and go to state 157
    GE  shift, and go to state 158

    $default  reduce using rule 101 (EqExp)


State 180

  100 EqExp: EqExp . EQ RelExp
  101      | EqExp . NE RelExp
  103 LAndExp: LAndExp AND EqExp .

    EQ  shift, and go to state 159
    NE  shift, and go to state 160

    $default  reduce using rule 103 (LAndExp)


State 181

  103 LAndExp: LAndExp . AND EqExp
  105 LOrExp: LOrExp OR LAndExp .

    AND  shift, and go to state 161

    $default  reduce using rule 105 (LOrExp)


State 182

   62 ForDec: SEMICOLON SEMICOLON ForExp3 .

    $default  reduce using rule 62 (ForDec)


State 183

   67 ForExp3: Exp . COMMA ForExp3
   68        | Exp .

    COMMA  shift, and go to state 190

    $default  reduce using rule 68 (ForExp3)


State 184

   60 ForDec: SEMICOLON ForExp2 SEMICOLON . ForExp3
   61       | SEMICOLON ForExp2 SEMICOLON .

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    $default  reduce using rule 61 (ForDec)

    ForExp3     go to state 191
    Exp         go to state 183
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 185

   55 Stmt: FOR LP ForDec RP Block .

    $default  reduce using rule 55 (Stmt)


State 186

   57 ForDec: ForExp1 SEMICOLON ForExp3 .

    $default  reduce using rule 57 (ForDec)


State 187

   56 ForDec: ForExp1 ForExp2 SEMICOLON . ForExp3
   58       | ForExp1 ForExp2 SEMICOLON .

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    $default  reduce using rule 58 (ForDec)

    ForExp3     go to state 192
    Exp         go to state 183
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 188

   50 Stmt: WHILE LP Cond RP Stmt .

    $default  reduce using rule 50 (Stmt)


State 189

   49 Stmt: IF LP Cond RP Stmt ELSE . Stmt

    RETURN     shift, and go to state 105
    IF         shift, and go to state 106
    FOR        shift, and go to state 107
    WHILE      shift, and go to state 108
    BREAK      shift, and go to state 109
    CONTINUE   shift, and go to state 110
    LP         shift, and go to state 40
    LC         shift, and go to state 60
    SEMICOLON  shift, and go to state 112
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    Block       go to state 113
    Stmt        go to state 193
    Exp         go to state 118
    LVal        go to state 119
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 190

   67 ForExp3: Exp COMMA . ForExp3

    LP         shift, and go to state 40
    ID         shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44

    ForExp3     go to state 194
    Exp         go to state 183
    LVal        go to state 47
    PrimaryExp  go to state 48
    Number      go to state 49
    UnaryExp    go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 191

   60 ForDec: SEMICOLON ForExp2 SEMICOLON ForExp3 .

    $default  reduce using rule 60 (ForDec)


State 192

   56 ForDec: ForExp1 ForExp2 SEMICOLON ForExp3 .

    $default  reduce using rule 56 (ForDec)


State 193

   49 Stmt: IF LP Cond RP Stmt ELSE Stmt .

    $default  reduce using rule 49 (Stmt)


State 194

   67 ForExp3: Exp COMMA ForExp3 .

    $default  reduce using rule 67 (ForExp3)
