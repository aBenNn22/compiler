Terminals unused in grammar

    DO
    QUESTION
    COLON


State 70 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: %empty
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMICOLON
    5       | CONST Specifier ExtDecList SEMICOLON
    6       | Specifier FuncDec CompSt
    7       | VoidType FuncDec CompSt
    8       | error SEMICOLON

    9 Specifier: TYPE

   10 VoidType: VOID

   11 ExtDecList: VarDec
   12           | VarDec COMMA ExtDecList

   13 Term: ID Arrays
   14     | ID

   15 Arrays: LB Exp RB
   16       | LB Exp RB Arrays

   17 VarDec: Term
   18       | Term ASSIGN InitVal
   19       | Term ASSIGN Exp

   20 InitVal: LC RC
   21        | LC InitValMul RC

   22 InitValMul: Exp
   23           | InitValMul COMMA Exp

   24 FuncDec: ID LP VarList RP
   25        | ID LP RP
   26        | ID LP VOID RP

   27 VarList: ParamDec
   28        | ParamDec COMMA VarList

   29 ParamDec: Specifier VarDec

   30 CompSt: LC StmDefList RC

   31 StmDefList: %empty
   32           | Stmt StmDefList
   33           | Def StmDefList

   34 Stmt: Exp SEMICOLON
   35     | CompSt
   36     | RETURN Exp SEMICOLON
   37     | RETURN SEMICOLON
   38     | IF LP Exp RP Stmt
   39     | IF LP Exp RP Stmt ELSE Stmt
   40     | WHILE LP Exp RP Stmt
   41     | CONTINUE SEMICOLON
   42     | BREAK SEMICOLON
   43     | FOR ForArgs Stmt

   44 ForArgs: LP ForArg SEMICOLON ForArg SEMICOLON ForArg RP

   45 ForArg: %empty
   46       | Exp

   47 Def: Specifier DecList SEMICOLON

   48 DecList: VarDec
   49        | VarDec COMMA DecList

   50 Exp: Exp ASSIGN Exp
   51    | Exp AND Exp
   52    | Exp OR Exp
   53    | Exp RELOP Exp
   54    | Exp ADD Exp
   55    | Exp MINUS Exp
   56    | Exp MUL Exp
   57    | Exp DIV Exp
   58    | Exp MOD Exp
   59    | Term SELF_ADD
   60    | Term SELF_MINUS
   61    | LP Exp RP
   62    | MINUS Exp
   63    | NOT Exp
   64    | ID LP Args RP
   65    | ID LP RP
   66    | ID Arrays
   67    | ID
   68    | INT
   69    | FLOAT

   70 Args: Exp COMMA Args
   71     | Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 8
    INT <type_int> (258) 68
    ID <type_id> (259) 13 14 24 25 26 64 65 66 67
    RELOP <type_id> (260) 53
    TYPE <type_id> (261) 9
    VOID <type_id> (262) 10 26
    FLOAT <type_float> (263) 69
    CONST (264) 5
    RETURN (265) 36 37
    IF (266) 38 39
    ELSE (267) 39
    FOR (268) 43
    WHILE (269) 40
    DO (270)
    BREAK (271) 42
    CONTINUE (272) 41
    LP (273) 24 25 26 38 39 40 44 61 64 65
    RP (274) 24 25 26 38 39 40 44 61 64 65
    LB (275) 15 16
    RB (276) 15 16
    LC (277) 20 21 30
    RC (278) 20 21 30
    COMMA (279) 12 23 28 49 70
    SEMICOLON (280) 4 5 8 34 36 37 41 42 44 47
    QUESTION (281)
    COLON (282)
    NOT (283) 63
    ASSIGN (284) 18 19 50
    MINUS (285) 55 62
    ADD (286) 54
    MUL (287) 56
    DIV (288) 57
    MOD (289) 58
    AND (290) 51
    OR (291) 52
    UMINUS (292)
    SELF_ADD (293) 59
    SELF_MINUS (294) 60
    LOWER_THEN_ELSE (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program <ptr> (42)
        on left: 1
        on right: 0
    ExtDefList <ptr> (43)
        on left: 2 3
        on right: 1 3
    ExtDef <ptr> (44)
        on left: 4 5 6 7 8
        on right: 3
    Specifier <ptr> (45)
        on left: 9
        on right: 4 5 6 29 47
    VoidType <ptr> (46)
        on left: 10
        on right: 7
    ExtDecList <ptr> (47)
        on left: 11 12
        on right: 4 5 12
    Term <ptr> (48)
        on left: 13 14
        on right: 17 18 19 59 60
    Arrays <ptr> (49)
        on left: 15 16
        on right: 13 16 66
    VarDec <ptr> (50)
        on left: 17 18 19
        on right: 11 12 29 48 49
    InitVal <ptr> (51)
        on left: 20 21
        on right: 18
    InitValMul <ptr> (52)
        on left: 22 23
        on right: 21 23
    FuncDec <ptr> (53)
        on left: 24 25 26
        on right: 6 7
    VarList <ptr> (54)
        on left: 27 28
        on right: 24 28
    ParamDec <ptr> (55)
        on left: 29
        on right: 27 28
    CompSt <ptr> (56)
        on left: 30
        on right: 6 7 35
    StmDefList <ptr> (57)
        on left: 31 32 33
        on right: 30 32 33
    Stmt <ptr> (58)
        on left: 34 35 36 37 38 39 40 41 42 43
        on right: 32 38 39 40 43
    ForArgs <ptr> (59)
        on left: 44
        on right: 43
    ForArg <ptr> (60)
        on left: 45 46
        on right: 44
    Def <ptr> (61)
        on left: 47
        on right: 33
    DecList <ptr> (62)
        on left: 48 49
        on right: 47 49
    Exp <ptr> (63)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
        on right: 15 16 19 22 23 34 36 38 39 40 46 50 51 52 53 54 55 56 57 58 61 62 63 70 71
    Args <ptr> (64)
        on left: 70 71
        on right: 64 70


State 0

    0 $accept: . program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2
    VOID   shift, and go to state 3
    CONST  shift, and go to state 4

    $end  reduce using rule 2 (ExtDefList)

    program     go to state 5
    ExtDefList  go to state 6
    ExtDef      go to state 7
    Specifier   go to state 8
    VoidType    go to state 9


State 1

    8 ExtDef: error . SEMICOLON

    SEMICOLON  shift, and go to state 10


State 2

    9 Specifier: TYPE .

    $default  reduce using rule 9 (Specifier)


State 3

   10 VoidType: VOID .

    $default  reduce using rule 10 (VoidType)


State 4

    5 ExtDef: CONST . Specifier ExtDecList SEMICOLON

    TYPE  shift, and go to state 2

    Specifier  go to state 11


State 5

    0 $accept: program . $end

    $end  shift, and go to state 12


State 6

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


State 7

    3 ExtDefList: ExtDef . ExtDefList

    error  shift, and go to state 1
    TYPE   shift, and go to state 2
    VOID   shift, and go to state 3
    CONST  shift, and go to state 4

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 13
    ExtDef      go to state 7
    Specifier   go to state 8
    VoidType    go to state 9


State 8

    4 ExtDef: Specifier . ExtDecList SEMICOLON
    6       | Specifier . FuncDec CompSt

    ID  shift, and go to state 14

    ExtDecList  go to state 15
    Term        go to state 16
    VarDec      go to state 17
    FuncDec     go to state 18


State 9

    7 ExtDef: VoidType . FuncDec CompSt

    ID  shift, and go to state 19

    FuncDec  go to state 20


State 10

    8 ExtDef: error SEMICOLON .

    $default  reduce using rule 8 (ExtDef)


State 11

    5 ExtDef: CONST Specifier . ExtDecList SEMICOLON

    ID  shift, and go to state 21

    ExtDecList  go to state 22
    Term        go to state 16
    VarDec      go to state 17


State 12

    0 $accept: program $end .

    $default  accept


State 13

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


State 14

   13 Term: ID . Arrays
   14     | ID .
   24 FuncDec: ID . LP VarList RP
   25        | ID . LP RP
   26        | ID . LP VOID RP

    LP  shift, and go to state 23
    LB  shift, and go to state 24

    $default  reduce using rule 14 (Term)

    Arrays  go to state 25


State 15

    4 ExtDef: Specifier ExtDecList . SEMICOLON

    SEMICOLON  shift, and go to state 26


State 16

   17 VarDec: Term .
   18       | Term . ASSIGN InitVal
   19       | Term . ASSIGN Exp

    ASSIGN  shift, and go to state 27

    $default  reduce using rule 17 (VarDec)


State 17

   11 ExtDecList: VarDec .
   12           | VarDec . COMMA ExtDecList

    COMMA  shift, and go to state 28

    $default  reduce using rule 11 (ExtDecList)


State 18

    6 ExtDef: Specifier FuncDec . CompSt

    LC  shift, and go to state 29

    CompSt  go to state 30


State 19

   24 FuncDec: ID . LP VarList RP
   25        | ID . LP RP
   26        | ID . LP VOID RP

    LP  shift, and go to state 23


State 20

    7 ExtDef: VoidType FuncDec . CompSt

    LC  shift, and go to state 29

    CompSt  go to state 31


State 21

   13 Term: ID . Arrays
   14     | ID .

    LB  shift, and go to state 24

    $default  reduce using rule 14 (Term)

    Arrays  go to state 25


State 22

    5 ExtDef: CONST Specifier ExtDecList . SEMICOLON

    SEMICOLON  shift, and go to state 32


State 23

   24 FuncDec: ID LP . VarList RP
   25        | ID LP . RP
   26        | ID LP . VOID RP

    TYPE  shift, and go to state 2
    VOID  shift, and go to state 33
    RP    shift, and go to state 34

    Specifier  go to state 35
    VarList    go to state 36
    ParamDec   go to state 37


State 24

   15 Arrays: LB . Exp RB
   16       | LB . Exp RB Arrays

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 45


State 25

   13 Term: ID Arrays .

    $default  reduce using rule 13 (Term)


State 26

    4 ExtDef: Specifier ExtDecList SEMICOLON .

    $default  reduce using rule 4 (ExtDef)


State 27

   18 VarDec: Term ASSIGN . InitVal
   19       | Term ASSIGN . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    LC     shift, and go to state 46
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term     go to state 44
    InitVal  go to state 47
    Exp      go to state 48


State 28

   12 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 21

    ExtDecList  go to state 49
    Term        go to state 16
    VarDec      go to state 17


State 29

   30 CompSt: LC . StmDefList RC

    INT       shift, and go to state 38
    ID        shift, and go to state 39
    TYPE      shift, and go to state 2
    FLOAT     shift, and go to state 40
    RETURN    shift, and go to state 50
    IF        shift, and go to state 51
    FOR       shift, and go to state 52
    WHILE     shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55
    LP        shift, and go to state 41
    LC        shift, and go to state 29
    NOT       shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 31 (StmDefList)

    Specifier   go to state 56
    Term        go to state 44
    CompSt      go to state 57
    StmDefList  go to state 58
    Stmt        go to state 59
    Def         go to state 60
    Exp         go to state 61


State 30

    6 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 6 (ExtDef)


State 31

    7 ExtDef: VoidType FuncDec CompSt .

    $default  reduce using rule 7 (ExtDef)


State 32

    5 ExtDef: CONST Specifier ExtDecList SEMICOLON .

    $default  reduce using rule 5 (ExtDef)


State 33

   26 FuncDec: ID LP VOID . RP

    RP  shift, and go to state 62


State 34

   25 FuncDec: ID LP RP .

    $default  reduce using rule 25 (FuncDec)


State 35

   29 ParamDec: Specifier . VarDec

    ID  shift, and go to state 21

    Term    go to state 16
    VarDec  go to state 63


State 36

   24 FuncDec: ID LP VarList . RP

    RP  shift, and go to state 64


State 37

   27 VarList: ParamDec .
   28        | ParamDec . COMMA VarList

    COMMA  shift, and go to state 65

    $default  reduce using rule 27 (VarList)


State 38

   68 Exp: INT .

    $default  reduce using rule 68 (Exp)


State 39

   13 Term: ID . Arrays
   14     | ID .
   64 Exp: ID . LP Args RP
   65    | ID . LP RP
   66    | ID . Arrays
   67    | ID .

    LP  shift, and go to state 66
    LB  shift, and go to state 24

    SELF_ADD    reduce using rule 14 (Term)
    SELF_MINUS  reduce using rule 14 (Term)
    $default    reduce using rule 67 (Exp)

    Arrays  go to state 67


State 40

   69 Exp: FLOAT .

    $default  reduce using rule 69 (Exp)


State 41

   61 Exp: LP . Exp RP

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 68


State 42

   63 Exp: NOT . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 69


State 43

   62 Exp: MINUS . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 70


State 44

   59 Exp: Term . SELF_ADD
   60    | Term . SELF_MINUS

    SELF_ADD    shift, and go to state 71
    SELF_MINUS  shift, and go to state 72


State 45

   15 Arrays: LB Exp . RB
   16       | LB Exp . RB Arrays
   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP   shift, and go to state 73
    RB      shift, and go to state 74
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82


State 46

   20 InitVal: LC . RC
   21        | LC . InitValMul RC

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    RC     shift, and go to state 83
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term        go to state 44
    InitValMul  go to state 84
    Exp         go to state 85


State 47

   18 VarDec: Term ASSIGN InitVal .

    $default  reduce using rule 18 (VarDec)


State 48

   19 VarDec: Term ASSIGN Exp .
   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP   shift, and go to state 73
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 19 (VarDec)


State 49

   12 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 12 (ExtDecList)


State 50

   36 Stmt: RETURN . Exp SEMICOLON
   37     | RETURN . SEMICOLON

    INT        shift, and go to state 38
    ID         shift, and go to state 39
    FLOAT      shift, and go to state 40
    LP         shift, and go to state 41
    SEMICOLON  shift, and go to state 86
    NOT        shift, and go to state 42
    MINUS      shift, and go to state 43

    Term  go to state 44
    Exp   go to state 87


State 51

   38 Stmt: IF . LP Exp RP Stmt
   39     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 88


State 52

   43 Stmt: FOR . ForArgs Stmt

    LP  shift, and go to state 89

    ForArgs  go to state 90


State 53

   40 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 91


State 54

   42 Stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 92


State 55

   41 Stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 93


State 56

   47 Def: Specifier . DecList SEMICOLON

    ID  shift, and go to state 21

    Term     go to state 16
    VarDec   go to state 94
    DecList  go to state 95


State 57

   35 Stmt: CompSt .

    $default  reduce using rule 35 (Stmt)


State 58

   30 CompSt: LC StmDefList . RC

    RC  shift, and go to state 96


State 59

   32 StmDefList: Stmt . StmDefList

    INT       shift, and go to state 38
    ID        shift, and go to state 39
    TYPE      shift, and go to state 2
    FLOAT     shift, and go to state 40
    RETURN    shift, and go to state 50
    IF        shift, and go to state 51
    FOR       shift, and go to state 52
    WHILE     shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55
    LP        shift, and go to state 41
    LC        shift, and go to state 29
    NOT       shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 31 (StmDefList)

    Specifier   go to state 56
    Term        go to state 44
    CompSt      go to state 57
    StmDefList  go to state 97
    Stmt        go to state 59
    Def         go to state 60
    Exp         go to state 61


State 60

   33 StmDefList: Def . StmDefList

    INT       shift, and go to state 38
    ID        shift, and go to state 39
    TYPE      shift, and go to state 2
    FLOAT     shift, and go to state 40
    RETURN    shift, and go to state 50
    IF        shift, and go to state 51
    FOR       shift, and go to state 52
    WHILE     shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55
    LP        shift, and go to state 41
    LC        shift, and go to state 29
    NOT       shift, and go to state 42
    MINUS     shift, and go to state 43

    $default  reduce using rule 31 (StmDefList)

    Specifier   go to state 56
    Term        go to state 44
    CompSt      go to state 57
    StmDefList  go to state 98
    Stmt        go to state 59
    Def         go to state 60
    Exp         go to state 61


State 61

   34 Stmt: Exp . SEMICOLON
   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP      shift, and go to state 73
    SEMICOLON  shift, and go to state 99
    ASSIGN     shift, and go to state 75
    MINUS      shift, and go to state 76
    ADD        shift, and go to state 77
    MUL        shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80
    AND        shift, and go to state 81
    OR         shift, and go to state 82


State 62

   26 FuncDec: ID LP VOID RP .

    $default  reduce using rule 26 (FuncDec)


State 63

   29 ParamDec: Specifier VarDec .

    $default  reduce using rule 29 (ParamDec)


State 64

   24 FuncDec: ID LP VarList RP .

    $default  reduce using rule 24 (FuncDec)


State 65

   28 VarList: ParamDec COMMA . VarList

    TYPE  shift, and go to state 2

    Specifier  go to state 35
    VarList    go to state 100
    ParamDec   go to state 37


State 66

   64 Exp: ID LP . Args RP
   65    | ID LP . RP

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    RP     shift, and go to state 101
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 102
    Args  go to state 103


State 67

   13 Term: ID Arrays .
   66 Exp: ID Arrays .

    SELF_ADD    reduce using rule 13 (Term)
    SELF_MINUS  reduce using rule 13 (Term)
    $default    reduce using rule 66 (Exp)


State 68

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp
   61    | LP Exp . RP

    RELOP   shift, and go to state 73
    RP      shift, and go to state 104
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82


State 69

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp
   63    | NOT Exp .

    $default  reduce using rule 63 (Exp)


State 70

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp
   62    | MINUS Exp .

    RELOP   shift, and go to state 73
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    RELOP     [reduce using rule 62 (Exp)]
    ASSIGN    [reduce using rule 62 (Exp)]
    MINUS     [reduce using rule 62 (Exp)]
    ADD       [reduce using rule 62 (Exp)]
    MUL       [reduce using rule 62 (Exp)]
    DIV       [reduce using rule 62 (Exp)]
    MOD       [reduce using rule 62 (Exp)]
    AND       [reduce using rule 62 (Exp)]
    OR        [reduce using rule 62 (Exp)]
    $default  reduce using rule 62 (Exp)


State 71

   59 Exp: Term SELF_ADD .

    $default  reduce using rule 59 (Exp)


State 72

   60 Exp: Term SELF_MINUS .

    $default  reduce using rule 60 (Exp)


State 73

   53 Exp: Exp RELOP . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 105


State 74

   15 Arrays: LB Exp RB .
   16       | LB Exp RB . Arrays

    LB  shift, and go to state 24

    $default  reduce using rule 15 (Arrays)

    Arrays  go to state 106


State 75

   50 Exp: Exp ASSIGN . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 107


State 76

   55 Exp: Exp MINUS . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 108


State 77

   54 Exp: Exp ADD . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 109


State 78

   56 Exp: Exp MUL . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 110


State 79

   57 Exp: Exp DIV . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 111


State 80

   58 Exp: Exp MOD . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 112


State 81

   51 Exp: Exp AND . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 113


State 82

   52 Exp: Exp OR . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 114


State 83

   20 InitVal: LC RC .

    $default  reduce using rule 20 (InitVal)


State 84

   21 InitVal: LC InitValMul . RC
   23 InitValMul: InitValMul . COMMA Exp

    RC     shift, and go to state 115
    COMMA  shift, and go to state 116


State 85

   22 InitValMul: Exp .
   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP   shift, and go to state 73
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 22 (InitValMul)


State 86

   37 Stmt: RETURN SEMICOLON .

    $default  reduce using rule 37 (Stmt)


State 87

   36 Stmt: RETURN Exp . SEMICOLON
   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP      shift, and go to state 73
    SEMICOLON  shift, and go to state 117
    ASSIGN     shift, and go to state 75
    MINUS      shift, and go to state 76
    ADD        shift, and go to state 77
    MUL        shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80
    AND        shift, and go to state 81
    OR         shift, and go to state 82


State 88

   38 Stmt: IF LP . Exp RP Stmt
   39     | IF LP . Exp RP Stmt ELSE Stmt

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 118


State 89

   44 ForArgs: LP . ForArg SEMICOLON ForArg SEMICOLON ForArg RP

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    $default  reduce using rule 45 (ForArg)

    Term    go to state 44
    ForArg  go to state 119
    Exp     go to state 120


State 90

   43 Stmt: FOR ForArgs . Stmt

    INT       shift, and go to state 38
    ID        shift, and go to state 39
    FLOAT     shift, and go to state 40
    RETURN    shift, and go to state 50
    IF        shift, and go to state 51
    FOR       shift, and go to state 52
    WHILE     shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55
    LP        shift, and go to state 41
    LC        shift, and go to state 29
    NOT       shift, and go to state 42
    MINUS     shift, and go to state 43

    Term    go to state 44
    CompSt  go to state 57
    Stmt    go to state 121
    Exp     go to state 61


State 91

   40 Stmt: WHILE LP . Exp RP Stmt

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 122


State 92

   42 Stmt: BREAK SEMICOLON .

    $default  reduce using rule 42 (Stmt)


State 93

   41 Stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 41 (Stmt)


State 94

   48 DecList: VarDec .
   49        | VarDec . COMMA DecList

    COMMA  shift, and go to state 123

    $default  reduce using rule 48 (DecList)


State 95

   47 Def: Specifier DecList . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 96

   30 CompSt: LC StmDefList RC .

    $default  reduce using rule 30 (CompSt)


State 97

   32 StmDefList: Stmt StmDefList .

    $default  reduce using rule 32 (StmDefList)


State 98

   33 StmDefList: Def StmDefList .

    $default  reduce using rule 33 (StmDefList)


State 99

   34 Stmt: Exp SEMICOLON .

    $default  reduce using rule 34 (Stmt)


State 100

   28 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 28 (VarList)


State 101

   65 Exp: ID LP RP .

    $default  reduce using rule 65 (Exp)


State 102

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp
   70 Args: Exp . COMMA Args
   71     | Exp .

    RELOP   shift, and go to state 73
    COMMA   shift, and go to state 125
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 71 (Args)


State 103

   64 Exp: ID LP Args . RP

    RP  shift, and go to state 126


State 104

   61 Exp: LP Exp RP .

    $default  reduce using rule 61 (Exp)


State 105

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   53    | Exp RELOP Exp .
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    MINUS  shift, and go to state 76
    ADD    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80

    $default  reduce using rule 53 (Exp)


State 106

   16 Arrays: LB Exp RB Arrays .

    $default  reduce using rule 16 (Arrays)


State 107

   50 Exp: Exp . ASSIGN Exp
   50    | Exp ASSIGN Exp .
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP  shift, and go to state 73
    MINUS  shift, and go to state 76
    ADD    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    AND    shift, and go to state 81
    OR     shift, and go to state 82

    $default  reduce using rule 50 (Exp)


State 108

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   55    | Exp MINUS Exp .
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 55 (Exp)


State 109

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   54    | Exp ADD Exp .
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 54 (Exp)


State 110

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   56    | Exp MUL Exp .
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    $default  reduce using rule 56 (Exp)


State 111

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   57    | Exp DIV Exp .
   58    | Exp . MOD Exp

    $default  reduce using rule 57 (Exp)


State 112

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp
   58    | Exp MOD Exp .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79

    $default  reduce using rule 58 (Exp)


State 113

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   51    | Exp AND Exp .
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP  shift, and go to state 73
    MINUS  shift, and go to state 76
    ADD    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80

    $default  reduce using rule 51 (Exp)


State 114

   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   52    | Exp OR Exp .
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP  shift, and go to state 73
    MINUS  shift, and go to state 76
    ADD    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80

    $default  reduce using rule 52 (Exp)


State 115

   21 InitVal: LC InitValMul RC .

    $default  reduce using rule 21 (InitVal)


State 116

   23 InitValMul: InitValMul COMMA . Exp

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 127


State 117

   36 Stmt: RETURN Exp SEMICOLON .

    $default  reduce using rule 36 (Stmt)


State 118

   38 Stmt: IF LP Exp . RP Stmt
   39     | IF LP Exp . RP Stmt ELSE Stmt
   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP   shift, and go to state 73
    RP      shift, and go to state 128
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82


State 119

   44 ForArgs: LP ForArg . SEMICOLON ForArg SEMICOLON ForArg RP

    SEMICOLON  shift, and go to state 129


State 120

   46 ForArg: Exp .
   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP   shift, and go to state 73
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 46 (ForArg)


State 121

   43 Stmt: FOR ForArgs Stmt .

    $default  reduce using rule 43 (Stmt)


State 122

   40 Stmt: WHILE LP Exp . RP Stmt
   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP   shift, and go to state 73
    RP      shift, and go to state 130
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82


State 123

   49 DecList: VarDec COMMA . DecList

    ID  shift, and go to state 21

    Term     go to state 16
    VarDec   go to state 94
    DecList  go to state 131


State 124

   47 Def: Specifier DecList SEMICOLON .

    $default  reduce using rule 47 (Def)


State 125

   70 Args: Exp COMMA . Args

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    Term  go to state 44
    Exp   go to state 102
    Args  go to state 132


State 126

   64 Exp: ID LP Args RP .

    $default  reduce using rule 64 (Exp)


State 127

   23 InitValMul: InitValMul COMMA Exp .
   50 Exp: Exp . ASSIGN Exp
   51    | Exp . AND Exp
   52    | Exp . OR Exp
   53    | Exp . RELOP Exp
   54    | Exp . ADD Exp
   55    | Exp . MINUS Exp
   56    | Exp . MUL Exp
   57    | Exp . DIV Exp
   58    | Exp . MOD Exp

    RELOP   shift, and go to state 73
    ASSIGN  shift, and go to state 75
    MINUS   shift, and go to state 76
    ADD     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    AND     shift, and go to state 81
    OR      shift, and go to state 82

    $default  reduce using rule 23 (InitValMul)


State 128

   38 Stmt: IF LP Exp RP . Stmt
   39     | IF LP Exp RP . Stmt ELSE Stmt

    INT       shift, and go to state 38
    ID        shift, and go to state 39
    FLOAT     shift, and go to state 40
    RETURN    shift, and go to state 50
    IF        shift, and go to state 51
    FOR       shift, and go to state 52
    WHILE     shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55
    LP        shift, and go to state 41
    LC        shift, and go to state 29
    NOT       shift, and go to state 42
    MINUS     shift, and go to state 43

    Term    go to state 44
    CompSt  go to state 57
    Stmt    go to state 133
    Exp     go to state 61


State 129

   44 ForArgs: LP ForArg SEMICOLON . ForArg SEMICOLON ForArg RP

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    $default  reduce using rule 45 (ForArg)

    Term    go to state 44
    ForArg  go to state 134
    Exp     go to state 120


State 130

   40 Stmt: WHILE LP Exp RP . Stmt

    INT       shift, and go to state 38
    ID        shift, and go to state 39
    FLOAT     shift, and go to state 40
    RETURN    shift, and go to state 50
    IF        shift, and go to state 51
    FOR       shift, and go to state 52
    WHILE     shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55
    LP        shift, and go to state 41
    LC        shift, and go to state 29
    NOT       shift, and go to state 42
    MINUS     shift, and go to state 43

    Term    go to state 44
    CompSt  go to state 57
    Stmt    go to state 135
    Exp     go to state 61


State 131

   49 DecList: VarDec COMMA DecList .

    $default  reduce using rule 49 (DecList)


State 132

   70 Args: Exp COMMA Args .

    $default  reduce using rule 70 (Args)


State 133

   38 Stmt: IF LP Exp RP Stmt .
   39     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 136

    $default  reduce using rule 38 (Stmt)


State 134

   44 ForArgs: LP ForArg SEMICOLON ForArg . SEMICOLON ForArg RP

    SEMICOLON  shift, and go to state 137


State 135

   40 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 40 (Stmt)


State 136

   39 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    INT       shift, and go to state 38
    ID        shift, and go to state 39
    FLOAT     shift, and go to state 40
    RETURN    shift, and go to state 50
    IF        shift, and go to state 51
    FOR       shift, and go to state 52
    WHILE     shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55
    LP        shift, and go to state 41
    LC        shift, and go to state 29
    NOT       shift, and go to state 42
    MINUS     shift, and go to state 43

    Term    go to state 44
    CompSt  go to state 57
    Stmt    go to state 138
    Exp     go to state 61


State 137

   44 ForArgs: LP ForArg SEMICOLON ForArg SEMICOLON . ForArg RP

    INT    shift, and go to state 38
    ID     shift, and go to state 39
    FLOAT  shift, and go to state 40
    LP     shift, and go to state 41
    NOT    shift, and go to state 42
    MINUS  shift, and go to state 43

    $default  reduce using rule 45 (ForArg)

    Term    go to state 44
    ForArg  go to state 139
    Exp     go to state 120


State 138

   39 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 39 (Stmt)


State 139

   44 ForArgs: LP ForArg SEMICOLON ForArg SEMICOLON ForArg . RP

    RP  shift, and go to state 140


State 140

   44 ForArgs: LP ForArg SEMICOLON ForArg SEMICOLON ForArg RP .

    $default  reduce using rule 44 (ForArgs)
